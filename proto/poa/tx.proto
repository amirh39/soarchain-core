syntax = "proto3";
package soarchain.poa;

import "poa/challenger.proto";

// this line is used by starport scaffolding # proto/tx/import
import "poa/runner.proto";

option go_package = "soarchain/x/poa/types";

// Msg defines the Msg service.
service Msg {
  rpc GenClient(MsgGenClient) returns (MsgGenClientResponse);
  rpc ChallengeService(MsgChallengeService) returns (MsgChallengeServiceResponse);
  rpc UnregisterClient(MsgUnregisterClient) returns (MsgUnregisterClientResponse);
  rpc UnregisterChallenger(MsgUnregisterChallenger) returns (MsgUnregisterChallengerResponse);
  rpc GenGuard(MsgGenGuard) returns (MsgGenGuardResponse);
  rpc UnregisterRunner(MsgUnregisterRunner) returns (MsgUnregisterRunnerResponse);
  rpc RunnerChallenge(MsgRunnerChallenge) returns (MsgRunnerChallengeResponse);
  rpc UnregisterGuard(MsgUnregisterGuard) returns (MsgUnregisterGuardResponse);
  rpc SelectRandomChallenger(MsgSelectRandomChallenger) returns (MsgSelectRandomChallengerResponse);
  rpc SelectRandomRunner(MsgSelectRandomRunner) returns (MsgSelectRandomRunnerResponse);
  rpc V2VChallenge(MsgV2VChallenge) returns (MsgV2VChallengeResponse);
  rpc V2NChallenge(MsgV2NChallenge) returns (MsgV2NChallengeResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgGenClient {
  string creator = 1;
  string address = 2;
}

message MsgGenClientResponse {
}

message MsgChallengeService {
  string creator = 1;
  string clientAddress = 2;
  string clientCommunicationMode = 3;
  string challengeResult = 4;

}

message MsgChallengeServiceResponse {
}

message MsgUnregisterClient {
  string creator = 1;
  string address = 2;
  string fee = 3;
}

message MsgUnregisterClientResponse {
}

message MsgUnregisterChallenger {
  string creator = 1;
  string challengerAddress = 2;
  string fee = 3;
}

message MsgUnregisterChallengerResponse {
}

message MsgGenGuard {
  string creator = 1;
  string guardPubKey = 2;
  string v2XAddr = 3;
  string v2XStake = 4;
  string v2XIp = 5;
  string v2NAddr = 6;
  string v2NStake = 7;
  string v2NIp = 8;
  string runnerAddr = 9;
  string runnerStake = 10;
  string runnerIp = 11;
}

message MsgGenGuardResponse {
}

message MsgUnregisterRunner {
  string creator = 1;
  string runnerAddress = 2;
  string fee = 3;
}

message MsgUnregisterRunnerResponse {
}

message MsgRunnerChallenge {
  string creator = 1;
  string runnerAddress = 2;
  string v2nDeviceType = 3;
  string challengeResult = 4;
}

message MsgRunnerChallengeResponse {
}

message MsgUnregisterGuard {
  string creator = 1;
  string fee = 2;
}

message MsgUnregisterGuardResponse {
}

message MsgSelectRandomChallenger {
  string creator = 1;
}

message MsgSelectRandomChallengerResponse {
  Challenger randomChallenger = 1;
}

message MsgSelectRandomRunner {
  string creator = 1;
}

message MsgSelectRandomRunnerResponse {
  Runner randomRunner = 1;
}

message MsgV2VChallenge {
  string creator = 1;
  string rxAddress = 2;
  string rxResult = 3;
  repeated string bxAddress = 4;
  repeated string bxResult = 5;
}

message MsgV2VChallengeResponse {
}

message MsgV2NChallenge {
  string creator = 1;
  string runnerAddress = 2;
  string runnerResult = 3;
  repeated string v2NBxAddress = 4;
  repeated string v2NBxResult = 5;
}

message MsgV2NChallengeResponse {
}

// this line is used by starport scaffolding # proto/tx/message
