syntax = "proto3";
package soarchain.did;
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "did/params.proto";
import "did/client_did_document.proto";
import "did/runner_did_document.proto";

option go_package = "soarchain/x/did/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/soarchain/did/params";
  }

	rpc ClientDidAll(QueryAllClientDidRequest) returns (QueryAllClientDidResponse) {
		option (google.api.http).get = "/soarchain/did/client_did_document";
	}

	rpc ClientDidDocument(QueryGetClientDidRequest) returns (QueryGetClientDidResponse) {
		option (google.api.http).get = "/soarchain/did/client_did_document/{id}";
	}

	rpc RunnerDidAll(QueryAllRunnerDidRequest) returns (QueryAllRunnerDidResponse) {
		option (google.api.http).get = "/soarchain/did/runner_did_document";
	}

	rpc RunnerDidDocument(QueryGetRunnerDidRequest) returns (QueryGetRunnerDidResponse) {
		option (google.api.http).get = "/soarchain/did/runner_did_document/{id}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetClientDidRequest {
  string id = 1;
}

message QueryGetClientDidResponse {
	ClientDidDocumentWithSeq clientDidDocument = 1 [(gogoproto.nullable) = false];
}

message QueryAllClientDidRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllClientDidResponse {
	repeated ClientDidDocumentWithSeq clientDidDocument = 1  [(gogoproto.nullable) = false];
}

message QueryGetRunnerDidRequest {
	string id = 1;
  }
  
  message QueryGetRunnerDidResponse {
	RunnerDidDocumentWithSeq runnerDidDocument = 1 [(gogoproto.nullable) = false];
  }
  
  message QueryAllRunnerDidRequest {
	  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  }
  
  message QueryAllRunnerDidResponse {
	  repeated RunnerDidDocumentWithSeq runnerDidDocument = 1  [(gogoproto.nullable) = false];
  }


