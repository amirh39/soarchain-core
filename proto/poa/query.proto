syntax = "proto3";
package soarchain.poa;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "poa/params.proto";
import "poa/guard.proto";
import "poa/vrf_data.proto";
import "poa/vrf_user.proto";
import "poa/epoch_data.proto";
import "poa/motus_wallet.proto";
// this line is used by starport scaffolding # 1
import "poa/client.proto";
import "poa/runner.proto";
import "poa/challenger.proto";

option go_package = "soarchain/x/poa/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/soarchain/poa/params";
  }
  // Queries a Client by index.
	rpc Client(QueryGetClientRequest) returns (QueryGetClientResponse) {
		option (google.api.http).get = "/soarchain/poa/client/{index}";
	}

	// Queries a list of Client items.
	rpc ClientAll(QueryAllClientRequest) returns (QueryAllClientResponse) {
		option (google.api.http).get = "/soarchain/poa/client";
	}

// Queries a Challenger by index.
	rpc Challenger(QueryGetChallengerRequest) returns (QueryGetChallengerResponse) {
		option (google.api.http).get = "/soarchain/poa/challenger/{index}";
	}

	// Queries a list of Challenger items.
	rpc ChallengerAll(QueryAllChallengerRequest) returns (QueryAllChallengerResponse) {
		option (google.api.http).get = "/soarchain/poa/challenger";
	}

// Queries a Runner by index.
	rpc Runner(QueryGetRunnerRequest) returns (QueryGetRunnerResponse) {
		option (google.api.http).get = "/soarchain/poa/runner/{index}";
	}

	// Queries a list of Runner items.
	rpc RunnerAll(QueryAllRunnerRequest) returns (QueryAllRunnerResponse) {
		option (google.api.http).get = "/soarchain/poa/runner";
	}

// Queries a Guard by index.
	rpc Guard(QueryGetGuardRequest) returns (QueryGetGuardResponse) {
		option (google.api.http).get = "/soarchain/poa/guard/{index}";
	}

	// Queries a list of Guard items.
	rpc GuardAll(QueryAllGuardRequest) returns (QueryAllGuardResponse) {
		option (google.api.http).get = "/soarchain/poa/guard";
	}

// Queries a list of GetClientByAddress items.
	rpc GetClientByAddress(QueryGetClientByAddressRequest) returns (QueryGetClientByAddressResponse) {
		option (google.api.http).get = "/soarchain/poa/get_client_by_address/{address}";
	}

// Queries a list of GetChallengerByAddress items.
	rpc GetChallengerByAddress(QueryGetChallengerByAddressRequest) returns (QueryGetChallengerByAddressResponse) {
		option (google.api.http).get = "/soarchain/poa/get_challenger_by_address/{address}";
	}

// Queries a VrfData by index.
	rpc VrfData(QueryGetVrfDataRequest) returns (QueryGetVrfDataResponse) {
		option (google.api.http).get = "/soarchain/poa/vrf_data/{index}";
	}

	// Queries a list of VrfData items.
	rpc VrfDataAll(QueryAllVrfDataRequest) returns (QueryAllVrfDataResponse) {
		option (google.api.http).get = "/soarchain/poa/vrf_data";
	}

// Queries a VrfUser by index.
	rpc VrfUser(QueryGetVrfUserRequest) returns (QueryGetVrfUserResponse) {
		option (google.api.http).get = "/soarchain/poa/vrf_user/{index}";
	}

	// Queries a list of VrfUser items.
	rpc VrfUserAll(QueryAllVrfUserRequest) returns (QueryAllVrfUserResponse) {
		option (google.api.http).get = "/soarchain/poa/vrf_user";
	}

// Queries a list of VerifyRandomNumber items.
	rpc VerifyRandomNumber(QueryVerifyRandomNumberRequest) returns (QueryVerifyRandomNumberResponse) {
		option (google.api.http).get = "/soarchain/poa/verify_random_number/{pubkey}/{message}/{vrv}/{proof}";
	}

// Queries a list of IsChallengeable items.
	rpc IsChallengeable(QueryIsChallengeableRequest) returns (QueryIsChallengeableResponse) {
		option (google.api.http).get = "/soarchain/poa/is_challengeable/{clientAddr}";
	}

// Queries a EpochData by index.
	rpc EpochData(QueryGetEpochDataRequest) returns (QueryGetEpochDataResponse) {
		option (google.api.http).get = "/soarchain/poa/epoch_data";
	}
// Queries a MotusWallet by index.
	rpc MotusWallet(QueryGetMotusWalletRequest) returns (QueryGetMotusWalletResponse) {
		option (google.api.http).get = "/soarchain/poa/motus_wallet/{index}";
	}

	// Queries a list of MotusWallet items.
	rpc MotusWalletAll(QueryAllMotusWalletRequest) returns (QueryAllMotusWalletResponse) {
		option (google.api.http).get = "/soarchain/poa/motus_wallet";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetClientRequest {
	  string index = 1;

}

message QueryGetClientResponse {
	Client client = 1 [(gogoproto.nullable) = false];
}

message QueryAllClientRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllClientResponse {
	repeated Client client = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetChallengerRequest {
	  string index = 1;

}

message QueryGetChallengerResponse {
	Challenger challenger = 1 [(gogoproto.nullable) = false];
}

message QueryAllChallengerRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllChallengerResponse {
	repeated Challenger challenger = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetRunnerRequest {
	  string index = 1;

}

message QueryGetRunnerResponse {
	Runner runner = 1 [(gogoproto.nullable) = false];
}

message QueryAllRunnerRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRunnerResponse {
	repeated Runner runner = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetGuardRequest {
	  string index = 1;

}

message QueryGetGuardResponse {
	Guard guard = 1 [(gogoproto.nullable) = false];
}

message QueryAllGuardRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllGuardResponse {
	repeated Guard guard = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetClientByAddressRequest {
  string address = 1;
}

message QueryGetClientByAddressResponse {
  Client client = 1;
}

message QueryGetChallengerByAddressRequest {
  string address = 1;
}

message QueryGetChallengerByAddressResponse {
  Challenger challenger = 1;
}

message QueryGetVrfDataRequest {
	  string index = 1;

}

message QueryGetVrfDataResponse {
	VrfData vrfData = 1 [(gogoproto.nullable) = false];
}

message QueryAllVrfDataRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllVrfDataResponse {
	repeated VrfData vrfData = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetVrfUserRequest {
	  string index = 1;

}

message QueryGetVrfUserResponse {
	VrfUser vrfUser = 1 [(gogoproto.nullable) = false];
}

message QueryAllVrfUserRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllVrfUserResponse {
	repeated VrfUser vrfUser = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryVerifyRandomNumberRequest {
  string pubkey = 1;
  string message = 2;
  string vrv = 3;
  string proof = 4;
}

message QueryVerifyRandomNumberResponse {
  bool result = 1;
}

message QueryIsChallengeableRequest {
  string clientAddr = 1;
}

message QueryIsChallengeableResponse {
  string resultBool = 1;
  string challengeabilityScore = 2;
}

message QueryGetEpochDataRequest {}

message QueryGetEpochDataResponse {
	EpochData EpochData = 1 [(gogoproto.nullable) = false];
}
message QueryGetMotusWalletRequest {
	  string index = 1;

}

message QueryGetMotusWalletResponse {
	MotusWallet motusWallet = 1 [(gogoproto.nullable) = false];
}

message QueryAllMotusWalletRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllMotusWalletResponse {
	repeated MotusWallet motusWallet = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
