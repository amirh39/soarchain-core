syntax = "proto3";
package soarchain.poa;

import "poa/reputation.proto";
option go_package = "github.com/soar-robotics/soarchain-core/x/poa/types";

// Msg defines the Msg service.
service Msg {
  rpc ChallengeService(MsgChallengeService) returns (MsgChallengeServiceResponse);
  rpc RunnerChallenge(MsgRunnerChallenge) returns (MsgRunnerChallengeResponse);
  rpc SelectRandomChallenger(MsgSelectRandomChallenger) returns (MsgSelectRandomChallengerResponse);
  rpc SelectRandomRunner(MsgSelectRandomRunner) returns (MsgSelectRandomRunnerResponse);
  rpc ClaimMotusRewards(MsgClaimMotusRewards) returns (MsgClaimMotusRewardsResponse);
  rpc ClaimRunnerRewards(MsgClaimRunnerRewards) returns (MsgClaimRunnerRewardsResponse);
  rpc RegisterFactoryKey(MsgRegisterFactoryKey) returns (MsgRegisterFactoryKeyResponse);
  rpc ClaimChallengerRewards(MsgClaimChallengerRewards) returns (MsgClaimChallengerRewardsResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgChallengeService {
  string creator = 1;
  string clientPubkey = 2;
  string clientCommunicationMode = 3;
  string challengeResult = 4;

}

message MsgChallengeServiceResponse {
}

message MsgRunnerChallenge {
  string creator = 1;
  string runnerPubkey = 2;
  repeated string clientPubkeys = 3;
  string challengeResult = 4;
}

message MsgRunnerChallengeResponse {
}

message MsgSelectRandomChallenger {
  string creator = 1;
}

message MsgSelectRandomChallengerResponse {
  Reputation randomChallengerReputation = 1;
}

message MsgSelectRandomRunner {
  string creator = 1;
}

message MsgSelectRandomRunnerResponse {
  Reputation randomRunnerReputation = 1;
}


message MsgClaimMotusRewards {
  string creator = 1;
  string amount = 2;
}

message MsgClaimMotusRewardsResponse {
}

message MsgClaimRunnerRewards {
  string creator = 1;
  string amount = 2;
}

message MsgClaimRunnerRewardsResponse {
}

message MsgClaimChallengerRewards {
  string creator = 1;
  string amount = 2;
}

message MsgClaimChallengerRewardsResponse {
}

message MsgRegisterFactoryKey {
  string creator = 1;
  string factoryCert = 2;
}

message MsgRegisterFactoryKeyResponse {
}
