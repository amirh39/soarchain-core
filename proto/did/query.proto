syntax = "proto3";
package soarchain.did;
import "did/reputation.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "did/params.proto";
import "did/did_document.proto";

option go_package = "soarchain/x/did/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/soarchain/did/params";
  }

	rpc DidAll(QueryAllDidRequest) returns (QueryAllDidResponse) {
		option (google.api.http).get = "/soarchain/did/did_document";
	}

	rpc DidDocument(QueryGetDidRequest) returns (QueryGetDidResponse) {
		option (google.api.http).get = "/soarchain/did/did_document/{id}";
	}

	rpc Reputation(QueryGetReputationRequest) returns (QueryGetReputationResponse) {
		option (google.api.http).get = "/soarchain/did/reputation/{index}";
	}


	rpc ReputationAll(QueryAllReputationRequest) returns (QueryAllReputationResponse) {
		option (google.api.http).get = "/soarchain/did/reputation";
	}

	rpc GetReputationByAddress(QueryGetReputationByAddressRequest) returns (QueryGetReputationByAddressResponse) {
		option (google.api.http).get = "/soarchain/poa/get_reputation_by_address/{address}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetDidRequest {
  string id = 1;
}

message QueryGetDidResponse {
	DidDocumentWithSeq didDocument = 1 [(gogoproto.nullable) = false];
}

message QueryAllDidRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllDidResponse {
	repeated string did = 1  [(gogoproto.nullable) = false];
}


message QueryGetReputationRequest {
	string index = 1;

}

message QueryGetReputationResponse {
  Reputation reputation = 1 [(gogoproto.nullable) = false];
}

message QueryAllReputationRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllReputationResponse {
  repeated Reputation reputation = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetReputationByAddressRequest {
	string address = 1;
  }
  
  message QueryGetReputationByAddressResponse {
	  Reputation reputation = 1;
  }