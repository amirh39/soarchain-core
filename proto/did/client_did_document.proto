syntax = "proto3";
package soarchain.did;

option go_package = "soarchain/x/did/types";

import "gogoproto/gogo.proto";

message Strings {
  repeated string values = 1;
}

message ClientDidDocument {
  string id = 1;
  string pubKey = 2;
  string address = 3;
  string type = 4;
  Keys keys = 5 [json_name = "keys"];
  repeated VerificationMethod verificationMethods = 6 [json_name = "verificationMethod"];
  repeated VerificationRelationship authentications = 7 [json_name = "authentication", (gogoproto.customtype) = "VerificationRelationship"];
  repeated Service services = 8 [json_name = "service"];
  Vehicle vehicle = 9 [json_name = "vehicle"];
  Owner owner = 10 [json_name = "owner"];
  bool pidSupportedOneToTwnety = 11;
  bool pidSupportedTwentyOneToForthy = 12;
  bool pidSupportedForthyOneToSixty = 13;
  string created = 14;
  string updated = 15;
}

message Keys {
  string id = 1;
  string pubkeyType = 2;
  string controller = 3;
  string publicKeyPem = 4;
}

message VerificationMethod {
  string id = 1;
  string type = 2;
  string controller = 3;
  string publicKeyBase58 = 4;
}

// VerificationRelationship defines a W3C verification relationship
message VerificationRelationship {
  // VerificationRelationship can be one of a single ID or a VerificationMethod.
  oneof content {
    string verificationMethodId = 1;
    VerificationMethod verificationMethod = 2;
  }
}

// Service defines a service in the W3C Did Document.
message Service {
  string id = 1;
  string type = 2;
  string serviceEndpoint = 3;
}

message Vehicle {
  string vin = 1;
}

message Owner {
  string id = 1;
  string purchaseDate = 2;
}

// ClientDidDocumentWithSeq defines a message for Did Document with a sequence number for preventing replay attacks.
message ClientDidDocumentWithSeq {
  ClientDidDocument document = 1;
  uint64 sequence = 2;
}

// ClientDataWithSeq defines a message for data with a sequence number for preventing replay attacks.
message ClientDataWithSeq {
  bytes data = 1;
  uint64 sequence = 2;
}
